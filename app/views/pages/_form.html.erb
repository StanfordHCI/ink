<!-- Color option -->
<%= stylesheet_link_tag asset_path "red.css", media: "all" %>

<% content_for :head do %>
  <% for picture_panel in @page.pictures %>
    <%= render 'sites/picture_panel_head', panel: picture_panel %>
  <% end %>
  <% for s_selectpanel in @page.s_selectpanels %>
    <% for option in s_selectpanel.options %>
      <%= render 'sites/options_head', option: option %>
    <% end %>
  <% end %>
  <% for m_selectpanel in @page.m_selectpanels %>
    <% for option in m_selectpanel.options %>
      <%= render 'sites/options_head', option: option %>
    <% end %>
  <% end %>
  <% for quote_panel in @page.quote_panels %>
      <%= render 'sites/quote_panel_head', panel: quote_panel %>
  <% end %>
<% end %>

<nav class="panel_menu navbar-right" role="navigation">
  <div class="navbar-header">Panels</div>
  <ul>
    <% for panel in @page.panels.order(:created_at)%>
      <li><a href="#panel<%=panel.id%>"><%=panel.panel_name%></a></li>
    <% end %>
  </ul>
</nav>

<div class="formoid-default-red">
  <%= nested_form_for(@page, html:{class: "directUpload", id: "pageform"}) do |f| %>
    <div id="site_info" class="input-group-addon">
      <%= f.label :site_name, "Site Name*" %>
      <%= f.text_field :site_name %><br/>
      <br/>
      <%= f.label :description, "Site Description" %>
      <%= f.text_area :description %><br/>
      <%= f.check_box :display_description %>
      <%= "Display description on page?" %><br/>
    </div>

    <div id="panels">
    <% for panel in @page.panels.order(:created_at)%>
      <% if panel.type == "TextPanel" %>
        <%= f.fields_for :text_panels, panel, child_index: panel.id do |builder| %>
          <%= render 'text_panel_fields', f: builder, panel: panel%>
        <% end %>
      <% elsif panel.type == "Picture" %>
        <%= f.fields_for :pictures, panel, child_index: panel.id do |builder| %>
          <%= render 'picture_fields', f: builder, panel: panel%>
        <% end %>
      <% elsif panel.type == "SSelectpanel" %>
        <%= f.fields_for :s_selectpanels, panel, child_index: panel.id do |builder| %>
          <%= render 's_selectpanel_fields', f: builder, panel: panel%>
        <% end %>
      <% elsif panel.type == "MSelectpanel" %> 
        <%= f.fields_for :m_selectpanels, panel, child_index: panel.id do |builder| %>
          <%= render 'm_selectpanel_fields', f: builder, panel: panel%>
        <% end %>
      <% elsif panel.type == "LeftPicTextpanel" %>
        <%= f.fields_for :left_pic_textpanels, panel, child_index: panel.id do |builder| %>
          <%= render 'left_pic_textpanel_fields', f: builder, panel: panel %>
        <% end %>
      <% elsif panel.type == "PicCaptionPanel" %>
        <%= f.fields_for :pic_caption_panels, panel, child_index: panel.id do |builder| %>
          <%= render 'pic_caption_panel_fields', f: builder, panel: panel %>
        <% end %>
      <% else %>
        <%= f.fields_for :quote_panels, panel, child_index: panel.id do |builder| %>
          <%= render 'quote_panel_fields', f: builder, panel: panel %>
        <% end %>
      <% end %>
    <% end %>
    </div>

    <!--Needed for nested_form gem to use add/remove fields if panels don't exist-->
    <% if @page.text_panels.empty? %>
      <%= f.fields_for :text_panels do |builder| %>
        <%= render 'text_panel_fields', f: builder%>
      <% end %>
    <% end %> 
    <% if @page.pictures.empty? %>
      <%= f.fields_for :pictures do |builder| %>
        <%= render 'picture_fields', f: builder%>
      <% end %>
    <% end %> 
    <% if @page.m_selectpanels.empty? %>
      <%= f.fields_for :m_selectpanels do |builder| %>
        <%= render 'm_selectpanel_fields', f: builder%>
      <% end %>
    <% end %> 
    <% if @page.s_selectpanels.empty? %>
      <%= f.fields_for :s_selectpanels do |builder| %>
        <%= render 's_selectpanel_fields', f: builder%>
      <% end %>
    <% end %> 
    <% if @page.left_pic_textpanels.empty? %>
      <%= f.fields_for :left_pic_textpanels do |builder| %>
        <%= render 'left_pic_textpanel_fields', f: builder%>
      <% end %>
    <% end %>
    <% if @page.pic_caption_panels.empty? %>
      <%= f.fields_for :pic_caption_panels do |builder| %>
        <%= render 'pic_caption_panel_fields', f: builder %>
      <% end %>
    <% end %>
    <% if @page.quote_panels.empty? %>
      <%= f.fields_for :quote_panels do |builder| %>
        <%= render 'quote_panel_fields', f: builder %>
      <% end %>
    <% end %>

    <table id="menu">
      <tr>
        <td><%= f.link_to_add image_tag("text.png"), :text_panels, data: {target: "#panels"} %></td>
        <td><%= f.link_to_add image_tag("picture.png"), :pictures, data: {target: "#panels"} %></td>
        <td><%= f.link_to_add image_tag("single.png"), :s_selectpanels, data: {target: "#panels"} %></td>
        <td><%= f.link_to_add image_tag("multi.png"), :m_selectpanels, data: {target: "#panels"} %></td>
      </tr>
      <tr>
        <td><%= f.link_to_add image_tag("left_pic.png"), :left_pic_textpanels, data: {target: "#panels"} %></td>
        <td><%= f.link_to_add image_tag("pic_caption.png"), :pic_caption_panels, data: {target: "#panels"} %></td>
        <td><%= f.link_to_add image_tag("quote.png"), :quote_panels, data: {target: "#panels"} %></td>
      </tr>
    </table>

    <div id="panel_button">
      <%= link_to("Add a panel", "#", class: "add_panel", onclick: 'update_previews()')%>
    </div>

    <div id="saveform"> <%= f.submit "Save" %></div>
    <div id="publishform"><%= f.submit "Publish" %></div>
  <% end %>
</div>

<script>
  //Saves form and updates previews on blur events
  var pageform = document.getElementById("pageform");
  pageform.addEventListener("blur", save_form, true);
  pageform.addEventListener("blur", update_previews, true);

  //Allows S3 file uploads
  $(function() {
    $('.directUpload').find("input:file").each(function(i, elem) {
      file_upload(elem);
    });
  });

  function file_upload(elem){
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    fileInput.after(barContainer);
    fileInput.fileupload({
      fileInput:       fileInput,
      url:             '<%= @s3_direct_post.url %>',
      type:            'POST',
      autoUpload:       true,
      formData:         <%= @s3_direct_post.fields.to_json.html_safe %>,
      paramName:       'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:        'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
        css('background', 'green').
        css('display', 'block').
        css('width', '0%').
        text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//<%= @s3_direct_post.url.host %>/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
        css("background", "red").
        text("Failed");
      }
    });
  };
</script>
